@using ToDoList.Domain.Enum
@{
    ViewData["Title"] = "Home Page";
}

<h4 class="md-3 text-muted"></h4>
<form id="createTaskForm">
    <div class="mb-3">
        <label class="form-lable">Task name</label>
        <input name="name" type="text" class="form-control" />
    </div>
    <label class="form-label">Task priority</label>
    <select name="priority" class="form-select mb-3" asp-items="Html.GetEnumSelectList<Priority>()"></select>
    <div class="mb-3">
        <label class="form-lable">Task description</label>
        <textarea name="description" type="text" class="form-control" rows="3"></textarea>
    </div>
    <button id="createTask" class="btn btn-primary">Create</button>
</form>

<table class="table table-dark table-hover" id="taskTableId">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Priority</th>
            <th>Description</th>
            <th>Status</th>
            <th>Created</th>
            <th>Action</th>
           </tr>
    </thead>
    <tbody></tbody>
</table>







@section Scripts
    {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>
    <script>
        // TABLE INITIALIZATION
        let dataTable = $('#taskTableId').DataTable(
            {
                info: true,
                serverSide: true, // sorting on server side
                searching: false,
                paging: false,
                sorting: false,

                ajax: {
                    url: "@Url.Action("TaskHandler")",
                    method: 'POST',
                    data: null
                },
                columns: [

                    { data: 'id' },
                    { data: 'name' },
                    { data: 'priority' },
                    { data: 'description' },
                    { data: 'isDone' },
                    { data: 'created' },
                    {
                        data: null,
                        sortable: false,
                        render: function (data, type) {
                            return '<button class = "btn btn-success btn-sm center-block">Mark as done</button>'
                        }
                    }
                ],
                createdRow: function (nRow, data) {
                    for (var i = 0; i < dataTable.columns().header().length - 1; i++) {
                        $('td', nRow).eq(i).css('cursor', 'pointer');

                        $('td', nRow).eq(i).on('click', null);
                    }
                    $('td button', nRow).eq(i).on('click', null);
                }
                
   
            });
        
        
        
//        function Employee ( name, position, salary, office ) {
//    this.name = name;
//    this.position = position;
//    this.salary = salary;
//    this._office = office;
 
//    this.office = function () {
//        return this._office;
//    }
//    };

//        $('#taskTableId').DataTable({
//    data: [
//        new Employee( "Tiger Nixon", "System Architect", "$3,120", "Edinburgh" ),
//        new Employee( "Garrett Winters", "Director", "$5,300", "Edinburgh" )
//    ],
//    columns: [
//        { data: 'name' },
//        { data: 'salary' },
//        { data: 'office' },
//        { data: 'position' }
//    ]
//} );


        // MODAL ICON

        $('#createTask').on('click', function (e) {
            e.preventDefault();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Create", "Task")',
                data: $('#createTaskForm').serialize(),
                success: function (response) {
                    Swal.fire({
                        title: 'Info',
                        text: response.description,
                        icon: 'success',
                        confirmButtonText: 'OK'
                    })
                },
                error: function (response) {
                    Swal.fire({
                        title: 'Info',
                        text: response.responseJSON.description,
                        icon: 'error',
                        confirmButtonText: 'OK'
                    })
                }

            })
        });


    </script>
}
